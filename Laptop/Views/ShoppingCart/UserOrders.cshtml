@using Laptop.Models
@using Microsoft.AspNetCore.Http.Extensions
@model IEnumerable<Order>
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    var httpContext = HttpContextAccessor.HttpContext;
    string currentUrl = Context.Request.GetDisplayUrl();
    Page page = new Page();

    int pageNo = 0;

    if (ViewBag.Page != null)
    {
        page = ViewBag.Page;
        pageNo = page.CurrentPage;
    }
}
@{
    ViewData["Title"] = "XemGioHang";
    Layout = "~/Views/Layout/HomeLayout.cshtml";
}

@Html.Partial("_NotificationPartial")

 <!-- cd-popup -->
@if (Model.Count() == 0) // Check if the list is null or empty
{
    <h1 style="color:crimson">Trống</h1>
}
else
{
 
    <section class="h-100 h-custom" style="background-color: #fff;">
       
        <div class="container py-5 h-100">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col-12">
                    <div class="card card-registration card-registration-2" style="border-radius: 15px;">
                        <div class="card-body p-0">
                            <div class="row">
                                <div class="col-lg-8">
                                    <div class="p-5">
                                        <div class="d-flex justify-content-between align-items-center mb-5" style="margin-top: 40px;">
                                       
                                            <form asp-action="UserOrders" class="search-bar1">
                                                <h1 class="fw-bold text-black" style="width: 500px;">
                                                    @Model.FirstOrDefault()?.StatusNaviagtion.StatusName
                                                </h1>
                                                <div class="search-container">
                                                    <!-- Add a div container for flex layout -->
                                                    <input type="number" name="orderid" pattern=".*\S.*" required>
                                                    <button class="search-btn1" type="submit">
                                                        <span>Search</span>
                                                    </button>
                                                </div>
                                            </form>
                                        </div>

                                       

                                        @foreach (var item in Model)
                                        {
                                            <hr class="my-4 thick-hr">
                                            <div class="row mb-4 d-flex justify-content-between align-items-center">
                                                <a asp-action="CancelConfirm" asp-route-id="@item.OrderId" asp-route-detail="1">
                                                <div class="col-md-4 col-lg-4 col-xl-4">
                                           
                                                    <h6 class="text-black mb-0">Mã Đơn Hàng @item.OrderId</h6>
                                                    <h6 class="text-black mb-0">Ngày Đặt : @item.OrderDate</h6>
                                                    <h6 class="text-black mb-0">Trạng Thái Đơn Hàng : @item.StatusNaviagtion.StatusName</h6>
                                                </div>
                                              
                                                <div class="col-md-3 col-lg-2 col-xl-2 offset-lg-1">
                                                    <h6 class="mb-0">@item.PriceTotal?.ToString("#,##0") VNĐ</h6>
                                                </div>
                                                <div class="col-md-1 col-lg-1 col-xl-1 text-end">
                                                    @if(item.OrderStatus == 1)
                                                        {
                                                            <a class="btn btn-danger btn-sm" asp-controller="ShoppingCart" asp-action="CancelConfirm" asp-route-id="@item.OrderId">Hủy Đơn Hàng</a>
                                                        }
                                                       

                                                </div>
                                                </a>
                                            </div>
                                            <hr class="my-4 thick-hr">
                                        }
                                        <div class="pt-5 justify-content-between align-items-center">
                                            <div class="pt-5">
                                                <h6 class="mb-0 d-flex ">
                                                    <a href="#!" class="text-body">
                                                        <a class="btn btn-primary btn-sm ml-auto" asp-controller="Home" asp-action="Index">Trở Về</a>
                                                    </a>
                                                    
                                                </h6>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class=" container">
            @if (page.TotalItems > 0)
            {
                <ul class="pagination justify-content-end">

                    @if (page.CurrentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-controller="ShoppingCart" asp-action="UserOrders" asp-route-id="@Model.FirstOrDefault().OrderStatus" asp-route-id="" asp-route-pg="1">Trang Đầu</a>
                        </li>
                        <li>
                            <a class="page-link" asp-controller="ShoppingCart" asp-action="UserOrders" asp-route-id="@Model.FirstOrDefault().OrderStatus" asp-route-pg="@(page.CurrentPage - 1)">Trước</a>
                        </li>
                    }
                    @for (var pge = page.StartPage; pge <= page.EndPage; pge++)
                    {
                        <li class="page-item @(pge == page.CurrentPage ? "active" : "")">
                            <a class="page-link" asp-controller="ShoppingCart" asp-action="UserOrders" asp-route-id="@Model.FirstOrDefault().OrderStatus" asp-route-pg="@pge">@pge </a>
                        </li>
                    }

                    @if (page.CurrentPage < page.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-controller="ShoppingCart" asp-action="UserOrders" asp-route-id="@Model.FirstOrDefault().OrderStatus" asp-route-pg="@(page.CurrentPage+1)">Tiếp</a>
                        </li>
                        <li>
                            <a class="page-link" asp-controller="ShoppingCart" asp-action="UserOrders" asp-route-id="@Model.FirstOrDefault().OrderStatus" asp-route-pg="@(page.TotalPages)">Trang Cuối</a>
                        </li>
                    }

                </ul>

            }
            @for (var pge = page.StartPage; pge <= page.EndPage; pge++)
            {

            }
        </div>
    </section>
  
}




@section Scripts
{
    <style>
        .search-bar1 input,
        .search-btn1,
        .search-btn1:before,
        .search-btn1:after {
            transition: all 0.25s ease-out;
        }

        .search-bar1 input,
        .search-btn1 {
            width: 3em;
            height: 3em;
        }

            .search-bar1 input:invalid:not(:focus),
            .search-btn1 {
                cursor: pointer;
            }

            .search-bar1,
            .search-bar1 input:focus,
            .search-bar1 input:valid {
                width: auto;
            }

                .search-bar1 input:focus,
                .search-bar1 input:not(:focus) + .search-btn1:focus {
                    outline: transparent;
                }

        .search-bar1 {
            display: flex; /* Change the display to flex */
            align-items: center; /* Align items vertically */
            justify-content: space-between; /* Distribute items evenly */
          
        }

            .search-bar1 input {
                background: transparent;
                border-radius: 1.5em;
                box-shadow: 0 0 0 0.4em #171717 inset;
                padding: 0.75em;
                transform: translate(0.5em,0.5em) scale(0.5);
                transform-origin: 100% 0;
                -webkit-appearance: none;
                -moz-appearance: none;
                appearance: none;
            }

                .search-bar1 input::-webkit-search-decoration {
                    -webkit-appearance: none;
                }

                .search-bar1 input:focus,
                .search-bar1 input:valid {
                    background: #fff;
                    border-radius: 0.375em 0 0 0.375em;
                    box-shadow: 0 0 0 0.1em #d9d9d9 inset;
                    transform: scale(1);
                }

        .search-container {
            display: flex; /* Set the container as flex to align items */
            align-items: center; /* Align items vertically */
        }
        .search-btn1 {
            background: #171717;
            border-radius: 0 0.75em 0.75em 0 / 0 1.5em 1.5em 0;
            padding: 0.75em;
            position: relative;
            transform: translate(0.25em,0.25em) rotate(45deg) scale(0.25,0.125);
            transform-origin: 0 50%;
        }

            .search-btn1:before,
            .search-btn1:after {
                content: "";
                display: block;
                opacity: 0;
                position: absolute;
            }

            .search-btn1:before {
                border-radius: 50%;
                box-shadow: 0 0 0 0.2em #f1f1f1 inset;
                top: 0.75em;
                left: 0.75em;
                width: 1.2em;
                height: 1.2em;
            }

            .search-btn1:after {
                background: #f1f1f1;
                border-radius: 0 0.25em 0.25em 0;
                top: 51%;
                left: 51%;
                width: 0.75em;
                height: 0.25em;
                transform: translate(0.2em,0) rotate(45deg);
                transform-origin: 0 50%;
            }

            .search-btn1 span {
                display: inline-block;
                overflow: hidden;
                width: 1px;
                height: 1px;
            }

        /* Active state */
        .search-bar1 input:focus + .search-btn1,
        .search-bar1 input:valid + .search-btn1 {
            background: #2762f3;
            border-radius: 0 0.375em 0.375em 0;
            transform: scale(1);
        }

            .search-bar1 input:focus + .search-btn1:before,
            .search-bar1 input:focus + .search-btn1:after,
            .search-bar1 input:valid + .search-btn1:before,
            .search-bar1 input:valid + .search-btn1:after {
                opacity: 1;
            }

            .search-bar1 input:focus + .search-btn1:hover,
            .search-bar1 input:valid + .search-btn1:hover,
            .search-bar1 input:valid:not(:focus) + .search-btn1:focus {
                background: #0c48db;
            }

            .search-bar1 input:focus + .search-btn1:active,
            .search-bar1 input:valid + .search-btn1:active {
                transform: translateY(1px);
            }
    </style>
}