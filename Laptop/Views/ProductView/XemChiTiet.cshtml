@model ProductVariation
@using Microsoft.AspNetCore.Http.Extensions
@using PagedList
@using PagedList.Core
@using X.PagedList
@{
	string currentUrl = Context.Request.GetDisplayUrl();
	IEnumerable<ProductItem> ListColor = ViewBag.Color ;
	IEnumerable<ProductVariation> ListSP = ViewBag.ListSP as IEnumerable<ProductVariation>;
	IEnumerable<Product> ListSize = ViewBag.ListSizes;

	Pager pager = new Pager();

	int pageNo = 0;

	if (ViewBag.Pager != null)
	{
		pager = ViewBag.Pager;
		pageNo = pager.CurrentPage;
	}

}

@{
	ViewData["Title"] = "Chi Tiết Sản Phẩm";
	Layout = "~/Views/Layout/ProductLayout.cshtml";
}
<div class="custom-model-main">
	<div class="custom-model-inner">
		<div class="close-btn">×</div>
		<div class="custom-model-wrap">
			<div class="pop-up-content-wrap">
				<p>Thêm Vào Giỏ Hàng Thành Công</p>
			</div>
		</div>
	</div>
	<div class="bg-overlay"></div>
</div>
<!-- SECTION -->
<div class="section">
	<!-- container -->
	<div class="container">
		<!-- row -->
		<div class="row">
			<!-- Product main img -->
			<div class="col-md-5 col-md-push-2">
				<div id="product-main-img">
					<div class="product-preview">
						<img  src="~/Contents/img/@Model.ProductItems.Image1" alt="">
					</div>

					<div class="product-preview">
						<img  src="~/Contents/img/@Model.ProductItems.Image2" alt="">
					</div>

					<div class="product-preview">
						<img  src="~/Contents/img/@Model.ProductItems.Image3" alt="">
					</div>

					<div class="product-preview">
						<img   src="~/Contents/img/@Model.ProductItems.Image4" alt="">
					</div>
				</div>
			</div>
			<!-- /Product main img -->
			<!-- Product thumb imgs -->
			<div class="col-md-2  col-md-pull-5">
				<div id="product-imgs">
					<div class="product-preview">
						<img  src="~/Contents/img/@Model.ProductItems.Image1" alt="">
					</div>

					<div class="product-preview">
						<img  src="~/Contents/img/@Model.ProductItems.Image2" alt="">
					</div>

					<div class="product-preview">
						<img   src="~/Contents/img/@Model.ProductItems.Image3" alt="">
					</div>

					<div class="product-preview">
						<img  src="~/Contents/img/@Model.ProductItems.Image4" alt="">
					</div>
				</div>
			</div>
			<!-- /Product thumb imgs -->
			<!-- Product details -->
			<div class="col-md-5">
				<div class="product-details">
					<h2 class="product-name">@Model.ProductItems.Product.ProductName.ToUpper() @Model.Ram.RamName.ToUpper() @Model.Ssd.Ssdname</h2>
					<div>
						<div class="product-rating">
							<i class="fa fa-star"></i>	
							<i class="fa fa-star"></i>
							<i class="fa fa-star"></i>
							<i class="fa fa-star"></i>
							<i class="fa fa-star-o"></i>
						</div>
						<a class="review-link" href="#">@Model.ProductItems.Product.ProductComments.Count() Review(s) | Add your review</a>
					</div>
					<div>
						<h4 class="product-price">@Model.Price <del class="product-old-price">@Model.OriginPrice</del></h4>
						@if (Model.QtyinStock <= 0 || Model.QtyinStock == null)
						{
							<span class="product-available">Out Of Stock</span>
						}
						else
						{
							<span class="product-available">In Stock</span>
						}

					</div>
					<p>@Model.ProductItems.Product.Description</p>

					<div class="product-options">
						<label>
							Color
							<select id="colorId" class="input-select">
							</select>
						</label>				
					</div>
					<div class="product-options">
						<label>
							Quantity In Stock
							<span class="input">@Model.QtyinStock</span>
						</label>
					</div>

					<div class="add-to-cart">
						@if (Model.QtyinStock > 0)
						{
							<div class="qty-label">
								Choose Quantity
								<div class="input-number">
									<input type="number" id="quantityInput" value="1">
									<button id="unique-item-qty-up">+</button>
									<span class="qty-down">-</span>
								</div>
							</div>
						}
						@if(Model.QtyinStock > 0)
						{
							<div class="add-to-cart">
								<button class="add-to-cart-btn"><i class="fa fa-shopping-cart"></i> add to cart</button>
							</div>
						}
						else
						{
							<div class="add-to-cart" style="display: none;">
								<button class="add-to-cart-btn" style="margin-top: 49px;"><i class="fa fa-shopping-cart"></i></button>
							</div>
						}

					</div>

					<ul class="product-btns">
						<li><a href="#"><i class="fa fa-heart-o"></i> add to wishlist</a></li>
						<li><a href="#"><i class="fa fa-exchange"></i> add to compare</a></li>
					</ul>

					<ul class="product-links">
						<li>Category:</li>
						<li><a href="#">@Model.ProductItems.Product.Category.CategoryName</a></li>
					</ul>

					<ul class="product-links">
						<li>Share:</li>
						<li><a href="#"><i class="fa fa-facebook"></i></a></li>
						<li><a href="#"><i class="fa fa-twitter"></i></a></li>
						<li><a href="#"><i class="fa fa-google-plus"></i></a></li>
						<li><a href="#"><i class="fa fa-envelope"></i></a></li>
					</ul>

				</div>
			</div>
			<!-- /Product details -->
			<!-- Product tab -->
			<div class="col-md-12">
				<div id="product-tab">
					<!-- product tab nav -->
					<ul class="tab-nav">
						<li class="active"><a data-toggle="tab" href="#tab1">Description</a></li>
						<li><a data-toggle="tab" href="#tab3">Reviews (@Model.ProductItems.Product.ProductComments.Count())</a></li>
					</ul>
					<!-- /product tab nav -->
					<!-- product tab content -->
					<div class="tab-content">
						<!-- tab1  -->
						<div id="tab1" class="tab-pane fade in active">
							<div class="row">
								<div class="col-md-12">
									<p>@Model.ProductItems.Product.Description</p>
								</div>
							</div>
						</div>
						<!-- /tab1  -->
						<!-- tab2  -->
						<div id="tab2" class="tab-pane fade in">
							<div class="row">
								<div class="col-md-12">
									<p>@Model.ProductItems.Product.Description</p>
								</div>
							</div>
						</div>
						<!-- /tab2  -->
						<!-- tab3  -->
						<div id="tab3" class="tab-pane fade in">
							<div class="row">
								<!-- Rating -->
								<div class="col-md-3">
									<div id="rating">
										<div class="rating-avg">
											@{
		
												int totalComments1 = Model.ProductItems.Product.ProductComments.Count();
												if (totalComments1 > 0)
												{
												
													int totalRating = 0;
													foreach (var comment in Model.ProductItems.Product.ProductComments)
													{
														totalRating += comment.Ratings;
													}
												
													double averageRating = (double)totalRating / totalComments1;

													int roundedAverageRating = (int)Math.Round(averageRating);

																		<span>@roundedAverageRating</span>
																		<div class="rating-stars">
																			@for (int i = 1; i <= 5; i++)
														{
																				@if (i <= roundedAverageRating)
															{
																					<i class="fa fa-star"></i>
															}
															else
															{
																					<i class="fa fa-star-o"></i>
															}
														}
																		</div>
												}
												else
												{
																		<span>No ratings available</span>
												}
											}
										
										
										</div>
										<ul class="rating">
											@foreach (var rating in Enumerable.Range(1, 5).Reverse())
											{
												<li>
													<div class="rating-stars">
														@for (int i = 1; i <=5; i++)
														{
															<i class="fa fa-star@(i <= rating ? "" : "-o")"></i>
														}
													</div>
													<div class="rating-progress">
														@{
															// Tính toán tiến độ xếp hạng cho mỗi xếp hạng
															int totalComments = Model.ProductItems.Product.ProductComments.Count();
															int ratingCount = Model.ProductItems.Product.ProductComments.Count(n => n.Ratings == rating);
															double ratingProgress = totalComments == 0 ? 0 : (double)ratingCount / totalComments * 100;
														}
														<div style="width: @ratingProgress%"></div>
													</div>
													<span class="sum">@ratingCount</span>
												</li>
											}
										</ul>

									</div>
								</div>
								<!-- /Rating -->
								<!-- Reviews -->
								<div  class="col-md-6">
									<div id="records">
										<ul class="reviews">
											@foreach (var comment in Model.ProductItems.Product.ProductComments.Take(3).OrderBy(n => n.CreateDate))
											{
												<li>
													<div class="review-heading">

														<h5 class="name">@comment.Customer.UserName</h5>
														<p class="date">@comment.CreateDate</p>
														<div class="review-rating">
															@for (int i = 1; i <= 5; i++)
															{
																<i class="fa fa-star@(comment.Ratings >= i ? "" : "-o")"></i>
															}
														</div>

													</div>
													<div class="review-body">
														<p>@comment.Detail</p>
													</div>
												</li>
											}

										</ul>
									</div>
								
									<button id="showMore" class="center-button btn">Show More</button>
								</div>
								<!-- /Reviews -->
								<!-- Review Form -->
								<div class="col-md-3">
									<div id="review-form">
										<form class="review-form" asp-controller="Comments" asp-action="Create" method="post" asp-route-currentUrl="@currentUrl">
											<div class="input-rating">
												<span>Your Rating: </span>
												<div class="stars">
													<input id="star5" name="rating" value="5" type="radio"><label for="star5"></label>
													<input id="star4" name="rating" value="4" type="radio"><label for="star4"></label>
													<input id="star3" name="rating" value="3" type="radio"><label for="star3"></label>
													<input id="star2" name="rating" value="2" type="radio"><label for="star2"></label>
													<input id="star1" name="rating" value="1" type="radio"><label for="star1"></label>
												</div>
											</div>
											<input type="hidden" name="ProductId" value="@Model.ProductItems.Product.ProductId" />
		
											<textarea name="Detail" class="input" placeholder="Your Review"></textarea>
											<button type="submit" class="btn">Post Comment</button>
										</form>
									
									@* 	<form class="review-form">
											<textarea class="input" placeholder="Your Review"></textarea>
											<div class="input-rating">
												<span>Your Rating: </span>
												<div class="stars">
													<input id="star5" name="rating" value="5" type="radio"><label for="star5"></label>
													<input id="star4" name="rating" value="4" type="radio"><label for="star4"></label>
													<input id="star3" name="rating" value="3" type="radio"><label for="star3"></label>
													<input id="star2" name="rating" value="2" type="radio"><label for="star2"></label>
													<input id="star1" name="rating" value="1" type="radio"><label for="star1"></label>
												</div>
											</div>
											<button class="primary-btn">Submit</button>
										</form> *@
									</div>
								</div>
								<!-- /Review Form -->
							</div>
						</div>
						<!-- /tab3  -->
					</div>
					<!-- /product tab content  -->
				</div>
			</div>
			<!-- /product tab -->
		</div>
		<!-- /row -->
	</div>
	<!-- /container -->
</div>

<!-- Section -->
<div class="section">
	<!-- container -->
	<div class="container">
		<!-- row -->
		<div class="row">
			<div class="col-md-12">
				<div class="section-title text-center">
					<h3 class="title">CÁC CẤU HÌNH KHÁC</h3>
				</div>
			</div>

			<!-- product -->
			@foreach (var item in ListSP)
			{
				<div class="col-md-3 col-xs-6">
					<div class="product">
						<div class="product-img">
							<a href="@Url.Action("XemChiTiet", "ProductView", new { id = item.ProductVarId})">
								<img src="~/Contents/img/@item.ProductItems.Image1" alt="">
								<div class="product-label">
									<span class="sale">-30%</span>
								</div>
							</a>
						</div>
						<div class="product-body">
							<p class="product-category">@item.ProductItems.Product.Category.CategoryName.ToUpper()</p>
							<h3 class="product-name">
								<a href="#">
									@item.ProductItems.Product.ProductName.ToUpper()
									@item.Ram.RamName.ToUpper() @item.Ssd.Ssdname
								</a>
							</h3>
							<h4 class="product-price">@item.Price <del class="product-old-price">@item.OriginPrice</del></h4>
							<div class="product-rating"></div>
							<div class="product-btns">
								<button class="add-to-wishlist"><i class="fa fa-heart-o"></i><span class="tooltipp">add to wishlist</span></button>
								<button class="add-to-compare"><i class="fa fa-exchange"></i><span class="tooltipp">add to compare</span></button>
								<button class="quick-view"><i class="fa fa-eye"></i><span class="tooltipp">quick view</span></button>
							</div>
						</div>
						<div class="add-to-cart">
							<button class="add-to-cart-btn">
								<i class="fa fa-shopping-cart"></i> add to cart
							</button>
						</div>
					</div>
				</div>
			}


			<!-- /product -->

		</div>
		<!-- /row -->
	</div>
	<!-- /container -->
</div>
<!-- /Section -->

@section Scripts
{
	<script>
		var productId = '@Model.ProductItems.Product.ProductId';

		$(document).ready(function () {
			GetColor(productId);
		});
		// $('#colorId').change(function () {
		// 	var url = "/post/name-" + $(this).val();
		// 	window.location.href = url;
		// });

		$(document).on('change', '#colorId', function () {

			var colorIds = $(this).val();
			GetImages(colorIds)
			// var selectedRam = @Model.RamId;
			// var selectedSSD = @Model.Ssdid;
			// var selectedColor = $(this).val();
			
			// var url = '@Url.Action("XemChiTiet", "ProductView")'
			// 	+ `?id=${selectedColor}&ramId=${selectedRam}&ssdId=${selectedSSD}`;

			// window.location.href = url;
		});





		function GetColor(productId) {
			var product = productId;
			$.ajax({
				url: '@Url.Action("GetColor", "ProductView")',
				type: 'GET',
				data: { id: product },
				success: function (data) {
					var addedValues = {};
					var currentSelection = $('#colorId').val();
					$('#colorId').empty(); // Xóa tất cả các tùy chọn hiện có trước khi thêm mới
					$.each(data["$values"], function (index, item) {
						if (!addedValues[item.color.colorName]) {
							$('#colorId').append('<option value="' + item.productItemsId + '">' + item.color.colorName + '</option>');
							addedValues[item.color.colorName] = true;
						}
					});
					if (currentSelection && addedValues[currentSelection]) {
						$('#colorId').val(currentSelection);
					}
			
				}
			});
		}

		function GetImages(productId) {
			$.ajax({
				url: '@Url.Action("GetImages", "ProductView")',
				type: 'GET',
				data: { id: productId },
				success: function (data) {



					var images = [
						data.image1,
						data.image2,
						data.image3,
						data.image4
					];


					var imageNodes = document.querySelectorAll('#product-main-img .product-preview img');
					console.log("Hello" + imageNodes.length);

					for (var i = 0; i < imageNodes.length; i++) {
						if (images[i]) {
							imageNodes[i].src = '/Contents/img/' + images[i].split('/').pop();
						}
					}
					var imageNodes2 = document.querySelectorAll('.zoomImg');

					for (var i = 0; i < imageNodes2.length; i++) {
						if (images[i]) {
							imageNodes2[i].src = 'https://localhost:7266/Contents/img/' + images[i];
						}
					}
					var imageNodes3 = document.querySelectorAll('#product-imgs .product-preview img');

					for (var i = 0; i < imageNodes3.length; i++) {
						if (images[i]) {
							imageNodes3[i].src = '/Contents/img/' + images[i].split('/').pop();
						}
					}

				}
			})
		}

	

		$('.add-to-cart-btn').click(function (e) {
			var productId = $('#colorId').val();
			var quanTity = $('#quantityInput').val();
			var ram = @Model.RamId;
			var ssd = @Model.Ssdid;
			var returnUrl = "@currentUrl";

			$.ajax({
				url: '@Url.Action("ThemGioHang","ShoppingCart")',
				type: "GET", // Hoặc "POST", tuỳ vào cấu hình của controller
				data: {
					masp: productId,
					ramId: ram,
					ssdId : ssd,
					quantity: quanTity,
					strURL: returnUrl
				},
				success: function (response) {

					$(".custom-model-main").addClass('model-open');
				},
				error: function (xhr) {
					if (xhr.status === 400) {
						alert(xhr.statusText);
					} else {
						alert("Vượt quá số lượng tồn!");
					}
				}
			});
		});


		

		$('#unique-item-qty-up').click(function () {

			var currentValue = parseInt($("#quantityInput").val());
			var qtyInStock = parseInt($(".product-options .input").text());

			if (currentValue < qtyInStock) {
				currentValue = currentValue + 1;
				$('#quantityInput').val(currentValue);
			} 
			else {
				alert("Số lượng vượt quá số lượng trong kho!");
			}
		});

		$('.qty-down').click(function () {

			var currentValue = parseInt($("#quantityInput").val());
			var newValue = currentValue--;
			$('#quantityInput').val(newValue);
		});


		document.querySelectorAll('.stars input').forEach(function (star) {
			star.addEventListener('change', function () {
				var rating = this.value;
				document.getElementById('commentForm').appendChild(
					document.createElement('input', {
						type: 'hidden',
						name: 'rating',
						value: rating
					})
				);
			});
		});


		$(function () {
			function interceptPaging() {
				$("#table1").on("click", ".pagination a", function (event) {
					event.preventDefault();

					$.get($(this).attr("href"), function (data) {
						$("#table1").html(data);
						interceptPaging();
					});
				});
			}

			interceptPaging();
		});

		var page1 = 2;
		var pageSize1 = 3;

		$("#showMore").click(function () {
			$.ajax({
				url: '@Url.Action("GetMoreRecord", "ProductView")',
				type: 'GET',
				data: {
					id: '@Model.ProductItems.Product.ProductId',
					page: page1,
					pageSize: pageSize1
				},
				success: function (data) {
					$("#records").append(data);
					page1++; // Increment the correct variable
				},
				error: function (xhr, status, error) {
					console.error(xhr.responseText); // Log any errors for debugging
				}
			});
		});
		$(".close-btn, .bg-overlay").click(function () {
			$(".custom-model-main").removeClass('model-open');
		});





	</script>
	<style>
		.center-button {
			display: block;
			margin-left: auto;
			margin-right: auto;
		}
	</style>
	<style>
		.input-number {
			position: relative;
			width: 70px;
			display: inline-block;
		}

			.input-number input[type=number] {
				width: 100%;
				padding: 5px;
				text-align: center;
			}

			.input-number button {
				position: absolute;
				top: 0;
				width: 20px;
				height: 20px;
				border: none;
				background: #f8f9fa;
				color: #000;
				cursor: pointer;
			}

				.input-number button:hover {
					background: #e9ecef;
				}

		.qty-down {
			right: 0;
			left: 89px;
		}

	</style>
}
	


