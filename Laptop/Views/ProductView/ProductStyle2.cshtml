@using Microsoft.AspNetCore.Http.Extensions
@using System.Security.Claims
@using Microsoft.AspNetCore.Identity
@model IEnumerable<Product>
@inject LaptopContext _context
@inject UserManager<AppUserModel> _user

<style>
	.col-md-4 .grid-top .nameSP a:hover {
		color: rgba(239, 95, 33);
	}
</style>
@{
	string currentUrl = Context.Request.GetDisplayUrl();
	string? userId = null;
	@if (User.Identity.IsAuthenticated)
	{
		userId = User.FindFirst(ClaimTypes.NameIdentifier).Value;
	}
}
<!-- SECTION -->
<div class="section">
	<!-- container -->
	<div class="container">
		<!-- row -->
		<div class="row">

			<!-- section title -->
			<div class="col-md-12">
				<div class="section-title">
					<h3 class="title">Hot Products</h3>
				</div>
			</div>
			<!-- /section title -->
			<!-- Products tab & slick -->
			<div class="col-md-12">
				<div class="row">
					<div class="products-tabs">
						<!-- tab -->
						<div id="tab1" class="tab-pane active">
							<div class="products-slick" data-nav="#slick-nav-2">
								<!-- product -->
								@foreach (var item in Model)
								{
									var productId = item.ProductItems.FirstOrDefault()?.ProductVariations.FirstOrDefault();
									var customerId = _context.Customers.Where(n => n.AccountId == userId).Select(n => n.CustomerId).FirstOrDefault();
									if (customerId == 0)
									{
										customerId = _context.Employees.Where(n => n.AccountId == userId).Select(n => n.EmployeeId).FirstOrDefault();
									}

									<div class="product" alt="">
										<a href="/post/@SlugGenerator.SlugGenerator.GenerateSlug(item.ProductName)-@item.ProductItems.FirstOrDefault()?.ProductVariations.FirstOrDefault()?.ProductVarId" />
										<div class="product-img">
											<img src="~/Contents/img/@item.ProductItems.FirstOrDefault()?.Image1" alt="">

											<div class="product-label">
												<span class="sale">-10%</span>
												<span class="new">NEW</span>
											</div>
										</div>
										<div class="product-body">
											<p class="product-category">@item.Category?.CategoryName</p>
											<h3 class="product-name"><a href="#">@item.ProductName @item.ProductItems.First()?.ProductVariations.First()?.Ram?.RamName?.ToUpper() @item.ProductItems.First().ProductVariations.First().Ssd.Ssdname</a></h3>

											<h4 class="product-price">@item.ProductItems.FirstOrDefault()?.ProductVariations.FirstOrDefault()?.Price.ToString("#,##0") VNĐ <del class="product-old-price">@item.ProductItems.FirstOrDefault()?.ProductVariations.FirstOrDefault()?.OriginPrice</del></h4>
											<div class="product-rating">
												<i class="fa fa-star"></i>
												<i class="fa fa-star"></i>
												<i class="fa fa-star"></i>
												<i class="fa fa-star"></i>
												<i class="fa fa-star"></i>
											</div>

											<div class="product-btns">
												@if (productId != null && customerId != 0)
												{
													var wish = _context.WishLists.FirstOrDefault(n => n.ProductId == productId.ProductVarId && n.CustomerId == customerId);

													if (wish != null)
													{
														<button id="wishlist-button" data-product-id="@productId.ProductVarId" style="color : red;" class="add-to-wishlist">
															<i class="fa fa-heart" style="display: none; display : inline;"></i><span class="tooltipp">add to wishlist</span>
														</button>
													}
													else
													{
														<button id="wishlist-button" data-product-id="@productId.ProductVarId" class="add-to-wishlist">
															<i class="fa fa-heart-o"></i><span class="tooltipp">add to wishlist</span>
														</button>
													}


												}
												<a class="add-to-compare"><i class="fa fa-exchange"></i><span class="tooltipp">add to compare</span></a>
											</div>
										</div>
									</div>
								}
								<!-- /product -->
							</div>
							<div id="slick-nav-2" class="products-slick-nav"></div>
						</div>
						<!-- /tab -->
					</div>
				</div>
			</div>
			<!-- Products tab & slick -->
		</div>
		<!-- /row -->
	</div>
	<!-- /container -->
</div>
<!-- /SECTION -->


<style>
	.add-to-wishlist.active {
		color: red; /* Màu sắc hoặc bất kỳ thay đổi nào bạn muốn khi button được active */
	}

	.add-to-wishlist .fa.fa-heart {
		display: none; /* Ẩn icon trái tim rỗng */
	}

	.add-to-wishlist.active .fa.fa-heart-o {
		display: none; /* Ẩn icon trái tim rỗng khi active */
	}

	.add-to-wishlist.active .fa.fa-heart {
		display: inline; /* Hiện icon trái tim đầy khi active */
	}

</style>



<script>

	document.querySelectorAll('.add-to-wishlist').forEach(function (button) {
		button.addEventListener('click', function () {

			this.classList.toggle('active');

			const icon = this.querySelector('i');
			if (this.classList.contains('active')) {
				icon.classList.remove('fa-heart-o');
				icon.classList.add('fa-heart');

				var productId = this.getAttribute('data-product-id');
				addWishlist(productId);

			} else {
				icon.classList.remove('fa-heart');
				icon.classList.add('fa-heart-o');

				var productId = this.getAttribute('data-product-id');
				removeWishlist(productId);
			}
		});
	});


	function addWishlist(productId) {
		$.ajax({
			type: 'POST',
			url: '@Url.Action("AddWishList", "ProductView")',
			data: { id: productId },
			success: function (data) {

			},
		});
	}

	function removeWishlist(productId) {
		$.ajax({
			type: 'POST',
			url: '@Url.Action("RemoveWishList", "ProductView")',
			data: { id: productId },
			success: function (data) {

			},
		});
	}

</script>